local_repository(
    name = "rules_rust",
    path = "../../..",
)

local_repository(
    name = "examples",
    path = "../../../examples",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "openssl",
    strip_prefix = "openssl-OpenSSL_1_1_1d",
    urls = ["https://github.com/openssl/openssl/archive/OpenSSL_1_1_1d.tar.gz"],
    sha256 = "23011a5cc78e53d0dc98dfa608c51e72bcd350aa57df74c5d5574ba4ffb62e74",
    build_file = "@examples//third_party/openssl:BUILD.openssl.bazel",
)

load("@rules_rust//rust:repositories.bzl", "rust_repositories")

rust_repositories()

# Need to have an http_file along the lines of:
#
# load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")
# 
# http_file(
#     name = "crate_universe_resolver_darwin",
#     urls = ["file:///PATH/TO/rules_rust/cargo/crate_universe_resolver/target/release/crate_universe_resolver"],
#     sha256 = "FILL_ME_IN",
#     executable = True,
# )
# 
# http_file(
#     name = "crate_universe_resolver_linux",
#     urls = ["file:///PATH/TO/rules_rust/cargo/crate_universe_resolver/target/release/crate_universe_resolver"],
#     sha256 = "FILL_ME_IN",
#     executable = True,
# )

load("@rules_rust//crate_universe:defs.bzl", "crate", "crate_universe")

crate_universe(
    name = "rust_deps",
    cargo_toml_files = ["//:Cargo.toml"],
    overrides = {
        "openssl-sys": crate.override(
            extra_build_script_env_vars = {
                "OPENSSL_DIR": "../openssl/openssl",
            },
            extra_bazel_deps = {
                "cfg(all())": ["@openssl//:openssl"],
            },
            extra_build_script_bazel_data_deps = {
                "cfg(all())": ["@openssl//:openssl"],
            },
        ),
    },
    supported_targets = [
        "x86_64-apple-darwin",
        "x86_64-unknown-linux-gnu",
    ],
)

load("@rust_deps//:defs.bzl", "pinned_rust_install")

pinned_rust_install()
